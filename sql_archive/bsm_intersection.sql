with map_subset as (SELECT * FROM smart_columbus_cve__captcha where os_partition = '2020_12' and sourcedevice = 'morse_morsecrossing_cvcp' and messagetype = 'MAP' and timestamp > '2020-12-09T07:00:00.000Z' and timestamp < '2020-12-09T07:05:00.000Z' limit 1),
extracted_values as (
    select json_extract(messageBody, '$.intersections[0].laneSet[0]') as cursor, 
           json_extract(messageBody, '$.intersections[0].laneWidth') as laneWidth, 
           cast(json_extract_scalar(messageBody, '$.intersections[0].refPoint.lat') as double) / 10000000 as refLat, 
           cast(json_extract_scalar(messageBody, '$.intersections[0].refPoint.long') as double) / 10000000 as refLon, 

           transform(
               cast(json_extract(messageBody, '$.intersections[0].laneSet') AS ARRAY<JSON>),
                 x -> element_at(transform(cast(JSON_EXTRACT(x, '$.nodeList[1]') as ARRAY<JSON>),
                   y -> cast(ROW(JSON_EXTRACT_scalar(x, '$.laneID'), JSON_EXTRACT_scalar(x, '$.ingressApproach'), JSON_EXTRACT_scalar(y, '$.delta[1].x'), JSON_EXTRACT_scalar(y, '$.delta[1].y')) as ROW(laneID VARCHAR, ingressApproach VARCHAR, x DOUBLE, y DOUBLE))
                 ), 1)
            ) as deltas,
    * from map_subset),
extracted_coordinates as (select transform(deltas, x -> cast(ROW(
  x.laneID, 
  x.ingressApproach, 
  refLat + (x.y / 100) / 111111, 
  refLon + (x.x / 100) / (111111 * COS(refLat * PI() / 180))
  ) as ROW(laneID VARCHAR, ingressApproach VARCHAR, lat DOUBLE, lon DOUBLE))) as coordinates, * from extracted_values),
stop_points as (SELECT ingressApproach, laneID, lat, lon, cursor FROM extracted_coordinates CROSS JOIN UNNEST(coordinates) AS t ( laneID, ingressApproach, lat, lon) where ingressApproach is not null), 

bsm_subset as (select * from smart_columbus_cve__captcha where os_partition = '2020_12' and messagetype = 'BSM' and sourcedevice = 'morse_morsecrossing_cvcp' and day(from_iso8601_timestamp(timestamp)) = 13), 
identified_locations as (select cast(json_extract_scalar(messagebody, '$.coreData.lat') as double) / 10000000 as lat, cast(json_extract_scalar(messagebody, '$.coreData.long') as double) / 10000000 as long, json_extract_scalar(messagebody, '$.coreData.id') as id, timestamp from bsm_subset),
bsms_in_range as (select il.lat, il.long, id, il.timestamp from identified_locations il join stop_points sp on ST_Distance(ST_Point(il.lat, il.long), ST_Point(sp.lat, sp.lon)) < 0.00002 limit 100000),

distance_to_lane as (select bsm.lat, bsm.long, laneID, timestamp, ST_Distance(ST_Point(bsm.lat, bsm.long), ST_Point(sp.lat, sp.lon)) as distance from bsms_in_range bsm join stop_points sp on 1=1)

select min_by(laneID, distance) as laneID, lat, long, timestamp from distance_to_lane group by lat, long, timestamp