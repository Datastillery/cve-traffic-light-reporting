import report_utilities as utils

from datetime import date

SOURCE_TABLE = 'smart_columbus_cve__captcha'

def run_school_zone_report(cur, partition, target_table):
    zone_query = f"""
    with latest_tims as (SELECT messagebody, sourcedevice FROM smart_columbus_cve__captcha where messagetype = 'TIM' and

        cast(json_extract(messagebody,'$.dataFrames[0].content[1][0].item[1]') as integer) = 4124 and
        cast(json_extract(messagebody,'$.dataFrames[0].content[1][1].item[1]') as integer) = 12564 and
        cast(json_extract(messagebody,'$.dataFrames[0].content[1][2].item[1]') as integer) = 8720 and
        os_partition = '{partition}'
        ),

        latest_tim_polygonPoints as (
            select 
                cast(json_extract(messagebody,'$.dataFrames[0].regions[0].anchor.lat') as double) / 10000000 as anchorLat,
                cast(json_extract(messagebody,'$.dataFrames[0].regions[0].anchor.long') as double) / 10000000 as anchorLon,
                cast(json_extract(messagebody,'$.dataFrames[0].regions[0].description[1].offset[1][1]') AS ARRAY<JSON>),

                transform(cast(json_extract(messagebody,'$.dataFrames[0].regions[0].description[1].offset[1][1]') AS ARRAY<JSON>), x->
                
                    cast(cast(JSON_EXTRACT_SCALAR(x, '$.delta[1].lon') as double) /10000000 as varchar) || ' ' || cast(cast(JSON_EXTRACT_SCALAR(x, '$.delta[1].lat') as double) /10000000 as varchar)
                )
                as polygonVerticies
                from latest_tims
        ),
        latest_tim_polygonWktStrings as (
        select *,
        'POLYGON ((' || array_join(polygonVerticies, ',') || ',' || element_at(polygonVerticies,1)  || '))' as wellKnownText
        from latest_tim_polygonPoints 
        ),
        distinctPolygonWktStrings as (
        select distinct anchorLat, anchorLon, wellKnownText from latest_tim_polygonWktStrings
        ),
        distinctPolygonWktGeometryObjects as (
        SELECT anchorLon, anchorLat, ST_GeometryFromText(wellKnownText) as schoolZoneGeometryObjects from distinctPolygonWktStrings
        ),

        all_tims as (SELECT messagebody FROM smart_columbus_cve__captcha where messagetype = 'TIM' and
        minute(from_iso8601_timestamp(timestamp)) = 0 and
        second(from_iso8601_timestamp(timestamp)) = 0 and
        cast(json_extract(messagebody,'$.dataFrames[0].content[1][0].item[1]') as integer) = 4124 and
        cast(json_extract(messagebody,'$.dataFrames[0].content[1][1].item[1]') as integer) = 12564 and
        cast(json_extract(messagebody,'$.dataFrames[0].content[1][2].item[1]') as integer) = 8720 and
        os_partition = '{partition}'
        ),
        schoolZoneTimes as (
            select distinct
                cast(json_extract(messagebody,'$.dataFrames[0].duratonTime') as bigInt) as durationTime,
                cast(json_extract(messagebody,'$.dataFrames[0].startTime') as bigInt) as startTime,
                cast(json_extract(messagebody,'$.dataFrames[0].regions[0].anchor.lat') as double) / 10000000 as anchorLat,
                cast(json_extract(messagebody,'$.dataFrames[0].regions[0].anchor.long') as double) / 10000000 as anchorLon
                
                from all_tims
        ),

        latest_bsm as (
        SELECT timestamp as bsmTimestamp,
        json_extract_scalar(messageBody,'$.coreData.id') as vehicleId,
        cast(json_extract(messageBody,'$.coreData.speed') as double) / 50 * 2.23694 as bsmSpeedMph,
        cast(json_extract(messageBody,'$.coreData.long') as double ) /10000000 as bsmLon,
        cast(json_extract(messageBody,'$.coreData.lat') as double ) /10000000 as bsmLat,
        cast(json_extract(messageBody,'$.coreData.heading') as double ) /80 as bsmHeading,
        24*60*(day_of_year(from_iso8601_timestamp(timestamp))-1) + 60*hour(from_iso8601_timestamp(timestamp)) + minute(from_iso8601_timestamp(timestamp)) as bsmMinuteOfTheYear
        FROM smart_columbus_cve__captcha where messageType = 'BSM' and (sourceDevice = 'high_dominion_cvcp' or sourceDevice = 'high_weisheimer_cvcp' or sourceDevice = 'high_northbroadway_cvcp' or sourceDevice = 'high_como_cvcp' or sourceDevice = 'cleveland_westerville_cvcp' or sourceDevice = 'cleveland_weber_cvcp') and
        os_partition = '{partition}'
        ),

        distinct_bsm as (
        select min(bsmTimestamp) as bsm_timestamp, min(bsmSpeedMph) as bsmSpeedMph, min(bsmHeading) as bsmHeading, min(bsmMinuteOfTheYear) as bsmMinuteOfTheYear, vehicleId, bsmLon, bsmLat
            from latest_bsm group by vehicleId, bsmLon, bsmLat
        ),
        distinct_bsm_geometryObjects as(
        SELECT *, ST_Point(bsmLon,bsmLat) as bsmPointGeometryObjects
        from distinct_bsm
        ),

        bsmInSchoolZone as (
        SELECT *
        FROM distinct_bsm_geometryObjects p, distinctPolygonWktGeometryObjects q 
        WHERE ST_Contains(q.schoolZoneGeometryObjects, p.bsmPointGeometryObjects)
        ),
        bsmInSchoolZone2 as (
        SELECT
        p.vehicleId as bsm_vehicleId, p.bsmHeading as bsm_heading, p.bsm_timestamp as bsm_timestamp, p.bsmMinuteOfTheYear as bsm_minuteOfYear, p.bsmLat as bsm_lat, p.bsmLon as bsm_long, p.bsmSpeedMph as bsm_speed,
        q.anchorLat as SZ_anchorLat, q.anchorLon as SZ_anchorLon, q.startTime as SZ_startMinuteOfYear, q.durationTime as SZ_durationMinutes, cast(if(bsmSpeedMph>20, true, false) as boolean) as warningIssued

        FROM bsmInSchoolZone p JOIN schoolZoneTimes q

        ON p.anchorLat = q.anchorLat and 
        p.anchorLon = q.anchorLon and 
        p.bsmMinuteOfTheYear > q.startTime and  
        p.bsmMinuteOfTheYear < q.startTime + q.durationTime
        )
        SELECT * from bsmInSchoolZone2
    """

    utils.run_and_save_query(cur, zone_query, target_table)

cur = utils.new_connection()

for partition in utils.partitions_in_range(date(2020, 10, 16), date.today()):
    run_school_zone_report(cur, partition, f"cve_school_zone_{partition}")